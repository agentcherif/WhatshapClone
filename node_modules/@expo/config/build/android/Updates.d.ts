import { ExpoConfig } from '../Config.types';
import { Document } from './Manifest';
export declare enum Config {
    ENABLED = "expo.modules.updates.ENABLED",
    CHECK_ON_LAUNCH = "expo.modules.updates.EXPO_UPDATES_CHECK_ON_LAUNCH",
    LAUNCH_WAIT_MS = "expo.modules.updates.EXPO_UPDATES_LAUNCH_WAIT_MS",
    SDK_VERSION = "expo.modules.updates.EXPO_SDK_VERSION",
    RUNTIME_VERSION = "expo.modules.updates.EXPO_RUNTIME_VERSION",
    UPDATE_URL = "expo.modules.updates.EXPO_UPDATE_URL"
}
export declare function getUpdateUrl(config: ExpoConfig, username: string | null): string | null;
export declare function getRuntimeVersion(config: ExpoConfig): string | null;
export declare function getSDKVersion(config: ExpoConfig): string | null;
export declare function getUpdatesEnabled(config: ExpoConfig): boolean;
export declare function getUpdatesTimeout(config: ExpoConfig): number;
export declare function getUpdatesCheckOnLaunch(config: ExpoConfig): 'NEVER' | 'ALWAYS';
export declare function setUpdatesConfig(config: ExpoConfig, manifestDocument: Document, username: string | null): Promise<Document>;
export declare function setVersionsConfig(config: ExpoConfig, manifestDocument: Document): Document;
export declare function formatApplyLineForBuildGradle(projectDir: string, config: ExpoConfig): string;
export declare function isBuildGradleConfigured(buildGradleContent: string, projectDir: string, config: ExpoConfig): boolean;
export declare function isMainApplicationMetaDataSet(manifest: Document): boolean;
export declare function isMainApplicationMetaDataSynced(config: ExpoConfig, manifest: Document, username: string | null): boolean;
export declare function areVersionsSynced(config: ExpoConfig, manifest: Document): boolean;
